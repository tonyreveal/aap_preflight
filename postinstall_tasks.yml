---
- name: Re-enable repos and validate AAP install
  hosts: automationcontroller,execution_nodes,automationhub,automationedacontroller,database
  gather_facts: true
  pre_tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: vars/check_vars.yml
  tasks:
    - name: Re-enable repositories and chef-client if present 
      become: true
      block:
        - name: Make sure BaseOS and AppStream repos are enabled
          redhat.rhel_system_roles.rhsm_repository:
            name: "{{ all_repos }}"
            state: 'enabled'

        - name: Make sure AAP repo is disabled
          redhat.rhel_system_roles.rhsm_repository:
            name: 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms'
            state: 'disabled'

        - name: Get service facts
          ansible.builtin.service_facts:

        # Do we really want to do this?
        # I don't like the idea of managing AAP with Chef
        - name: Re-enable chef-client
          ansible.builtin.service:
            name: 'chef-client'
            state: 'started'
            enabled: true
          when: "'chef-client' in services"

        - name: Make sure AWX users UMASK is always 0022
          ansible.builtin.copy:
            src: "{{ playbook_dir }}/files/.bash_profile"
            dest: '/var/lib/awx/.bash_profile'
            owner: 'awx'
            group: 'awx'
            mode: '0644'
          when:
            - inventory_hostname in groups['automationcontroller'] or
              inventory_hostname in groups['execution_nodes']

    - name: Make sure Users and groups are configured on Controllers
      become: true
      check_mode: true
      when: inventory_hostname in groups['automationcontroller']
      block:
        - name: Ensure Groups are present locally on Controllers
          ansible.builtin.group:
            name: "{{ item }}"
            local: true
            state: 'present'
          loop: "{{ controller_groups }}"
          register: controller_groups_status

        - name: Ensure all users were created locally on Controllers
          ansible.builtin.user:
            name: "{{ item['name'] | default(omit) }}"
            comment: "{{ item['comment'] | default(omit) }}"
            group: "{{ item['group'] | default(omit) }}"
            groups: "{{ item['groups'] | default(omit) }}"
            home:  "{{ item['home'] | default(omit) }}"
            local:  "{{ item['local'] | default(omit) }}"
            shell: "{{ item['shell'] | default(omit) }}"
            state: 'present'
          loop: "{{ controller_users }}"
          register: controller_users_status

    - name: Make sure Users and groups are configured on Execution and Hop nodes
      become: true
      check_mode: true
      when: inventory_hostname in groups['execution_nodes']
      block:
        - name: Ensure Groups are present locally on Execution and Hop nodes
          ansible.builtin.group:
            name: "{{ item }}"
            local: true
            state: 'present'
          loop: "{{ execution_groups }}"
          register: execution_groups_status

        - name: Ensure all users were created locally on Execution and Hop nodes
          ansible.builtin.user:
            name: "{{ item['name'] | default(omit) }}"
            comment: "{{ item['comment'] | default(omit) }}"
            group: "{{ item['group'] | default(omit) }}"
            groups: "{{ item['groups'] | default(omit) }}"
            home:  "{{ item['home'] | default(omit) }}"
            local:  "{{ item['local'] | default(omit) }}"
            shell: "{{ item['shell'] | default(omit) }}"
            state: 'present'
          loop: "{{ execution_users }}"
          register: execution_users_status

    - name: Check Receptor is installed and service is running on all controllers, execution, and hop nodes
      when:
        - inventory_hostname in groups['automationcontroller'] or
          inventory_hostname in groups['execution_nodes']
      block:
        - name: Gather package facts
          ansible.builtin.package_facts:
        
        - name: Check if Receptor is installed
          ansible.builtin.set_fact:
            receptor_present: >-
              {{ true if packages | dict2items | map(attribute='key') |
                select('regex', 'receptor') | length >= 1
                else
                false
              }}

        - name: Check if receptor service is running
          ansible.builtin.set_fact:
            receptor_svc_running: >-
              {{ true if services['receptor.service'] is defined and
                services['receptor.service']['state'] == 'running'
                else
                false
              }}
          when: receptor_present

      rescue:
        - name: Reset hosts
          ansible.builtin.meta: clear_host_errors

    - name: Display all test results
      block:
        - name: Display Controller Groups result
          ansible.builtin.debug:
            msg: 'All groups on Automation Controllers were properly
              configured during installation.'
          when:
            - controller_groups_status is defined
            - not controller_groups_status['changed']
        
        - name: Display Controller Groups result when changed
          ansible.builtin.debug:
            msg: 'One or more groups on Automation Controllers were
              reconfigured by this playbook after the AAP installation.'
          when:
            - controller_groups_status is defined
            - controller_groups_status['changed']

        - name: Display Controller Users result
          ansible.builtin.debug:
            msg: 'All users on Automation Controllers were properly
              configured during installation.'
          when:
            - controller_users_status is defined
            - not controller_users_status ['changed']

        - name: Display Controller Users result when changed
          ansible.builtin.debug:
            msg: 'One or more users on Automation Controllers were
              reconfigured by this playbook after the AAP installation.'
          when:
            - controller_users_status is defined
            - controller_users_status ['changed']

        - name: Display Execution and Hop node Groups result
          ansible.builtin.debug:
            msg: 'All groups on Execution and Hop nodes were properly
              configured during installation.'
          when:
            - execution_groups_status is defined
            - not execution_groups_status['changed']
        
        - name: Display Execution and Hop node Groups result when changed
          ansible.builtin.debug:
            msg: 'One or more groups on Execution and Hop nodes were
              reconfigured by this playbook after the AAP installation.'
          when:
            - execution_groups_status is defined
            - execution_groups_status['changed']

        - name: Display Execution and Hop node Users result
          ansible.builtin.debug:
            msg: 'All users on Execution and Hop nodes were properly
              configured during installation.'
          when:
            - execution_users_status is defined
            - not execution_users_status['changed']
        
        - name: Display Execution and Hop node Users result when changed
          ansible.builtin.debug:
            msg: 'One or more users on Execution and Hop nodes were
              reconfigured by this playbook after the AAP installation.'
          when:
            - execution_users_status is defined
            - execution_users_status['changed']
...
