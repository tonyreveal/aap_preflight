---
- name: Re-enable repos and Chef-Client after installing AAP
  hosts: all
  gather_facts: false
  pre-tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: vars/check_vars.yml
  tasks:
    - name: Re-enable repositories and make sure Redis group is created correctly.
      block:
      become: true
        - name: Make sure repos are enabled
          redhat.rhel_system_roles.rhsm_repository:
            name: "{{ all_repos }}"
            state: 'enabled'
 
        - name: Get service facts
        ansible.builtin.service_facts:

        # Do we really want to do this?
        - name: Re-enable chef-client
          ansible.builtin.service:
            name: 'chef-client'
            state: 'started'
            enabled: true
          when: 'chef-client' in services
       
        - name: Ensure Redis group is created
          ansible.builtin.group:
            name: 'redis'
            state: 'present'
          check_mode: true
          when:
            - inventory_hostname in groups['automationcontroller'] or inventory_hostname in groups['execution_nodes']

        - name: Make sure awx is a member of the redis group on controllers
          ansible.builtin.user:
            name: 'awx'
            group: 'awx'
            groups: 'nginx,receptor,redis'
          check_mode: true
          when:
            - inventory_hostname in groups['automationcontroller']
 
        - name: Make sure awx is a member of the redis group on execution nodes
          ansible.builtin.user:
            name: 'awx'
            group: 'awx'
            groups: 'receptor'
          check_mode: true
          when:
            - inventory_hostname in groups['execution_nodes']

    - name: Verify Hop node Receptor connectivity to Controllers
      when:
        - inventory_hostname in groups['execution_nodes']
        - hostvars[inventory_hostname]['node_type'] == 'hop'
      block:
        - name: Gather package facts
          ansible.builtin.package_facts:
        
        - name: Check if Receptor is installed
          ansible.builtin.set_fact:
            hop_receptor_present: >-
              {{ true if packages | selectattr('name', 'defined') |
                selectattr('name', 'equalto', 'receptor.x86_64') | length == 1
                else
                false
              }}

        - name: Check if receptor service is running
          ansible.builtin.set_fact:
            hop_receptor_svc_running: >-
              {{ true if services | selectattr('name', 'defined') |
                selectattr('name', 'contains', 'receptor') | length == 1 |
                selectattr('state', 'equalto', 'running')
                else
                false
              }}

        - name: Verify Hop node receptor connectivity to Controllers
          ansible.builtin.command:
            cmd: "receptorctl --socket /run/awx-receptor/receptor.sock ping {{ control_node }}"
          become: true
          register: hop_receptor_connection
          ignore_errors: true
          loop: "{{ groups['automationcontroller'] }}"
          loop_control:
            loop_var: control_node
          when:
            - hop_receptor_present
            - hop_receptor_svc_running
 
        - name: Display Hop node receptor connectivity results
          ansible.builtin.debug:
            var: hop_receptor_connection['results'] | selectattr('stderr', 'defined') | map(attribute='stderr') | list
          when: hop_receptor_connection is defined

    - name: Verify Execution Node Receptor connectivity to Controllers
      when:
        - inventory_hostname in groups['execution_nodes']
        - hostvars[inventory_hostname]['node_type'] == 'exec'
      block:
        - name: Gather package facts
          ansible.builtin.package_facts:
        
        - name: Check if Receptor is installed
          ansible.builtin.set_fact:
            exec_receptor_present: >-
              {{ true if packages | selectattr('name', 'defined') |
                selectattr('name', 'equalto', 'receptor.x86_64') | length == 1
                else
                false
              }}

        - name: Check if receptor service is running
          ansible.builtin.set_fact:
            exec_receptor_svc_running: >-
              {{ true if services | selectattr('name', 'defined') |
                selectattr('name', 'contains', 'receptor') | length == 1 |
                selectattr('state', 'equalto', 'running')
                else
                false
              }}

        - name: Verify Execution node receptor connectivity to Controllers
          ansible.builtin.command:
            cmd: "receptorctl --socket /run/awx-receptor/receptor.sock ping {{ control_node }}"
          become: true
          register: exec_receptor_connection
          ignore_errors: true
          loop: "{{ groups['automationcontroller'] }}"
          loop_control:
            loop_var: control_node
          when:
            - exec_receptor_present
            - exec_receptor_svc_running

        - name: Display Execution node receptor success connectivity results
          ansible.builtin.debug:
            var: exec_receptor_connection['results'] | selectattr('stdout', 'defined') | map(attribute='stdout') | list
          when: exec_receptor_connection is defined

        - name: Display Execution node receptor failure connectivity results
          ansible.builtin.debug:
            var: exec_receptor_connection['results'] | selectattr('stderr', 'defined') | map(attribute='stderr') | list
          when: exec_receptor_connection is defined
...
